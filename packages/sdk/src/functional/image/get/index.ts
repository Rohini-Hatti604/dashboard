/**
 * @packageDocumentation
 * @module api.functional.image.get
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IGetImageByIdRequest } from "../../../structures/IGetImageByIdRequest";

export * as by_name from "./by_name";

/**
 * @controller ImageController.get
 * @path POST /image/get
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function get(
  connection: IConnection,
  inputs: get.Input,
): Promise<get.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...get.METADATA,
      template: get.METADATA.path,
      path: get.path(),
    },
    inputs,
  );
}
export namespace get {
  export type Input = IGetImageByIdRequest;
  export type Output = any;

  export const METADATA = {
    method: "POST",
    path: "/image/get",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/image/get";
}
