/**
 * @packageDocumentation
 * @module api.functional.open_search.process_tree
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IGetQueryDataFilter } from "../../../structures/IGetQueryDataFilter";

/**
 * @controller OpenSearchController.processTree
 * @path POST /open-search/process-tree
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function processTree(
  connection: IConnection,
  query: processTree.Input,
): Promise<processTree.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...processTree.METADATA,
      template: processTree.METADATA.path,
      path: processTree.path(),
    },
    query,
  );
}
export namespace processTree {
  export type Input = IGetQueryDataFilter;
  export type Output = any;

  export const METADATA = {
    method: "POST",
    path: "/open-search/process-tree",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/open-search/process-tree";
}
