/**
 * @packageDocumentation
 * @module api.functional.open_search.process_tree
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection } from "@nestia/fetcher";
import type { IGetQueryDataFilter } from "../../../structures/IGetQueryDataFilter";
/**
 * @controller OpenSearchController.processTree
 * @path POST /open-search/process-tree
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function processTree(connection: IConnection, query: processTree.Input): Promise<processTree.Output>;
export declare namespace processTree {
    type Input = IGetQueryDataFilter;
    type Output = any;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/open-search/process-tree";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
