/**
 * @packageDocumentation
 * @module api.functional.role
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection } from "@nestia/fetcher";
import type { ICreateRoleRequest } from "../../structures/ICreateRoleRequest";
import type { IListEntitiesRequestIRole } from "../../structures/IListEntitiesRequestIRole";
import type { IRole } from "../../structures/IRole";
import type { IUpdateRoleRequest } from "../../structures/IUpdateRoleRequest";
/**
 * @controller RoleController.create
 * @path POST /role/create
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function create(connection: IConnection, inputs: create.Input): Promise<create.Output>;
export declare namespace create {
    type Input = ICreateRoleRequest;
    type Output = IRole;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/role/create";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
/**
 * @controller RoleController.update
 * @path POST /role/update
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function update(connection: IConnection, inputs: update.Input): Promise<update.Output>;
export declare namespace update {
    type Input = IUpdateRoleRequest;
    type Output = IRole;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/role/update";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
/**
 * @controller RoleController.list
 * @path POST /role/list
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function list(connection: IConnection, inputs: list.Input): Promise<list.Output>;
export declare namespace list {
    type Input = IListEntitiesRequestIRole;
    type Output = any;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/role/list";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
