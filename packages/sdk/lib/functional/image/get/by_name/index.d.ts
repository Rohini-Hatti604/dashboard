/**
 * @packageDocumentation
 * @module api.functional.image.get.by_name
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection } from "@nestia/fetcher";
import type { IGetImageByNameRequest } from "../../../../structures/IGetImageByNameRequest";
/**
 * @controller ImageController.getbyName
 * @path POST /image/get/by-name
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function getbyName(connection: IConnection, inputs: getbyName.Input): Promise<getbyName.Output>;
export declare namespace getbyName {
    type Input = IGetImageByNameRequest;
    type Output = any;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/image/get/by-name";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
