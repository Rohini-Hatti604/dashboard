/**
 * @packageDocumentation
 * @module api.functional.image.category.get
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
import type { IConnection } from "@nestia/fetcher";
import type { IGetImageByIdRequest } from "../../../../structures/IGetImageByIdRequest";
/**
 * @controller ImageController.getCategory
 * @path POST /image/category/get
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export declare function getCategory(connection: IConnection, inputs: getCategory.Input): Promise<getCategory.Output>;
export declare namespace getCategory {
    type Input = IGetImageByIdRequest;
    type Output = any;
    const METADATA: {
        readonly method: "POST";
        readonly path: "/image/category/get";
        readonly request: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly response: {
            readonly type: "application/json";
            readonly encrypted: false;
        };
        readonly status: 201;
    };
    const path: () => string;
}
